var searchIndex = [{ty:"mod",name:"",path:"merge_insertion sort",desc:"Merge sort with insertion sort."},{ty:"mod",name:"common",path:"merge_insertion sort",desc:""},{ty:"mod",name:"utils",path:"merge_insertion sort::common",desc:"Commonly used functions"},{ty:"fn",name:"answer_to_bool",path:"merge_insertion sort::common::utils",desc:"Takes a yes or no answer in string form and returns a boolean value."},{ty:"fn",name:"string_getter",path:"merge_insertion sort::common::utils",desc:"Returns a string in response to a question."},{ty:"fn",name:"number_getter",path:"merge_insertion sort::common::utils",desc:"Takes user input and returns an integer."},{ty:"fn",name:"array_gen",path:"merge_insertion sort::common::utils",desc:"Geneerates an array with the number of elements specified by size.\nUpper bound limits the size of the numbers generated to itself\ntimes the number of elements requested. For example, if you\nrequest 10 elements and specify an upper bound of 2, you will get\n10 numbers ranging in size from 1 to 20."},{ty:"fn",name:"array_from_file",path:"merge_insertion sort::common::utils",desc:"Facilitates getting data from files in the form of an array\nof strings, each string consisting of one line from the file."},{ty:"fn",name:"int_array_from_file",path:"merge_insertion sort::common::utils",desc:"Uses array from file to return an array of integers. This\nneeds some more work."},{ty:"fn",name:"float_array_from_file",path:"merge_insertion sort::common::utils",desc:"Uses array_from_file and parse_string_to_chars and parse_string_to_float\nto return two vectors from a file: one of floating point numbers, and\nanother of owned strings. "},{ty:"fn",name:"parse_string_to_float",path:"merge_insertion sort::common::utils",desc:"Takes an owned string and returns a floating point numbger\nand an owned string, if possible."},{ty:"fn",name:"parse_string_to_chars",path:"merge_insertion sort::common::utils",desc:"Turns an owned string into a vector of chars."},{ty:"fn",name:"parse_chars_to_string",path:"merge_insertion sort::common::utils",desc:"Turns an owned vector of chars into an owned string."},{ty:"mod",name:"insertion",path:"merge_insertion sort::common",desc:""},{ty:"fn",name:"ins_sort",path:"merge_insertion sort::common::insertion",desc:"Insertion sort as a function"},{ty:"mod",name:"merge",path:"merge_insertion sort::common",desc:""},{ty:"fn",name:"merge",path:"merge_insertion sort::common::merge",desc:""}];var allPaths = {'508':{type:'fn',name:'float_array_from_file'},'865':{type:'mod',name:'insertion'},'206':{type:'fn',name:'number_getter'},'759':{type:'fn',name:'parse_string_to_chars'},'812':{type:'fn',name:'parse_chars_to_string'},'0':{type:'mod',name:'merge_insertion sort'},'11':{type:'mod',name:'utils'},'9':{type:'mod',name:'common'},'49':{type:'fn',name:'string_getter'},'19':{type:'fn',name:'answer_to_bool'},'365':{type:'fn',name:'array_from_file'},'867':{type:'fn',name:'ins_sort'},'248':{type:'fn',name:'array_gen'},'972':{type:'fn',name:'merge'},'969':{type:'mod',name:'merge'},'611':{type:'fn',name:'parse_string_to_float'},'409':{type:'fn',name:'int_array_from_file'}};